name: deploy-aws-lambda
on:
  push:
    branches:
      - main

jobs:
  continuous-integration:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python all python version
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
          architecture: x64

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Install Python Virtual ENV
        run: pip3 install virtualenv

      - name:  Setup Virtual env
        uses: actions/cache@v2
        id: cache-venv
        with:
          path: venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-venv-

      - name: Activate and Install Depencies into Virtual env
        run: python -m venv venv && source venv/bin/activate &&
          pip3 install -r requirements.txt
        if: steps.cache-venv.outputs.cache-hit != 'true'


      # Install all the app dependencies
      - name: Install dependencies
        run: |
          pip3 install -r requirements.txt



      # Build the app and run tests
      - name: Build and Run Test
        run: . venv/bin/activate && pytest tests/test.py
  
  continuous-deployment:
    runs-on: ubuntu-latest
    needs: [continuous-integration]    
    strategy:
      matrix:
        node-version: [10.x]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@main
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install Dependencies
        run: npm install
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - name: Serverless Deploy
        run: npm run-script deploy





















